# Lists and tuples

import e;
import std.io;
func main {
    var ls = [1, 2, 3, 4, 5];
    ls[1]++;

    ls == [1, 3, 3, 4, 5] || e(1);
    ls != [1, 3, 3, 4, 5] && e(2);
    ls + ls -3 == ls * 2 -3 || e(3);

    ([0, 1, 2, 3] | [1, 3, 5, 7]) == [0, 1, 2, 3, 5, 7] || e(4);
    ([0, 1, 2, 3] & [1, 3, 5, 7]) == [1, 3] || e(5);

    ls.pop();
    ls.push('Hel');
    ls.pop();
    ls.push(6);
    ls == [1, 3, 3, 4, 6] || e(6);
    ls.resize(2);
    ls == [1, 3] || e(7);

    ls.pop_front();
    ls.push_front(10);
    ls == [10, 3] || e(8);

    ls.tuple().slice().list() == ls || e(9);
    ls.append([8, 9, 7, 6]);
    ls.sort(true);

    var ls2 = [10, 10, 10, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 3, 10, 9, 9, 8, 7];
    ls2.sort();
    ls2.unique();
    ls2.reverse();

    ls == ls2 || e(10);
    (ls.empty() || !ls.size()) && e(11);

    var tuple = ((0, 1, 2, 3) + (4, 5, 6, 100) - 2) * -1;
    tuple -= 3;
    tuple.to_string() != "(5, 4, 3)" && e(12);
}
